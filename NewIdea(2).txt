from PIL import Image, ImageDraw
"""
import cv2
import numpy as np
filename = 'WIN_20220818_02_03_47_Pro.jpg'
img = Image.open(filename)
width, height = img.size
x = (width - height)//2
img_cropped = img.crop((x,0, x+height, height)) 
img_cropped.show()
mask = Image.new('L', img_cropped.size)
mask_draw = ImageDraw.Draw(mask)
width, height = img_cropped.size
mask_draw.ellipse((0, 0, width, height), fill=255)
mask.show()
img_cropped.putalpha(mask)
img_cropped.show()
"""

import cv2
import numpy as np

cropping = False

x_start, y_start, x_end, y_end = 0, 0, 0, 0
import keyboard
cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)
while True:

    _, img = cap.read()
    cv2.imshow("image",img)
    cv2.waitKey(2)
    print("Focus the product  and press s to continue")
    if keyboard.is_pressed("s"):
        break
    cv2.imwrite(r"temp.jpg",img)

image = cv2.imread('temp.jpg')
oriImage = image.copy()


def mouse_crop(event, x, y, flags, param):
    # grab references to the global variables
    global x_start, y_start, x_end, y_end, cropping

    # if the left mouse button was DOWN, start RECORDING
    # (x, y) coordinates and indicate that cropping is being
    if event == cv2.EVENT_LBUTTONDOWN:
        x_start, y_start, x_end, y_end = x, y, x, y
        cropping = True

    # Mouse is Moving
    elif event == cv2.EVENT_MOUSEMOVE:
        if cropping == True:
            x_end, y_end = x, y

    # if the left mouse button was released
    elif event == cv2.EVENT_LBUTTONUP:
        # record the ending (x, y) coordinates
        x_end, y_end = x, y
        cropping = False # cropping is finished

        refPoint = [(x_start, y_start), (x_end, y_end)]

        if len(refPoint) == 2: #when two points were found 

            filename = 'temp.jpg'
            img = Image.open(filename)
            width, height = img.size
            x = (width - height)//2
            img_cropped = img.crop((x_start, y_start, x_end, y_end)) 
#            img_cropped.show()
            mask = Image.new('L', img_cropped.size)
            mask_draw = ImageDraw.Draw(mask)
            width, height = img_cropped.size
            mask_draw.ellipse((0, 0, width, height), fill=255)
#            mask.show()
            img_cropped.putalpha(mask)
            img_cropped.show()
            img_cropped.save("NewCroppedImage.png")
#            rgb_im = img_cropped.convert('RGB')
#            rgb_im.save("Product.png")
           
#            roi = oriImage[refPoint[0][1]:refPoint[1][1], refPoint[0][0]:refPoint[1][0]]
#            cv2.imshow("Cropped", roi)
#            cv2.imwrite(r"C:\Users\Infamous796\Pictures\Camera Roll\NewAppImage.png",roi)

cv2.namedWindow("image")
cv2.setMouseCallback("image", mouse_crop)

while True:

    i = image.copy()

    if not cropping:
        cv2.imshow("image", image)

    elif cropping:
        cv2.rectangle(i, (x_start, y_start), (x_end, y_end), (255, 0, 0), 2)
        cv2.imshow("image", i)
        

    cv2.waitKey(1)



# close all open windows
cv2.destroyAllWindows()